<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_hspoke.ECCCommand</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ECCCommand</name>
        <script><![CDATA[//https://community.servicenow.com/community?id=community_question&sys_id=db8293a1db101fc01dcaf3231f96195b

var ECCCommand = Class.create();
ECCCommand.prototype = {
    run: function(server, command, correlator) {
        var ecc_queue = new GlideRecord("ecc_queue");
        var xmlDoc = new XMLDocument2();
        ecc_queue.initialize();
        ecc_queue.agent = "mid.server." + server;
        ecc_queue.payload = '<parameters><parameter name="name" value="' + this.encode(command) + '"/></parameters>';
        ecc_queue.queue = "output";
        ecc_queue.topic = "Command";
        ecc_queue.source = "hspokeSync";
        ecc_queue.agent_correlator = correlator;
        var ecc_sysid = ecc_queue.insert();

        var response_sysid;
        var ecc_response = new GlideRecord("ecc_queue");
        for (i = 0; i < 30; i++) {
            global.sleep(1000);
            ecc_response.addQuery("response_to", ecc_sysid);
            ecc_response.addQuery("queue", "input");
            ecc_response.query();
            if (ecc_response.next()) {
                response_sysid = ecc_response.sys_id;
                response_payload_xml = ecc_response.payload;
                xmlDoc.parseXML(response_payload_xml);
                var myResponse = xmlDoc.getFirstNode('/results/result/stdout').getTextContent().toString();
                return myResponse;
            }
        }
    },

    runAsync: function(server, command, correlator) {
        var ecc_queue = new GlideRecord("ecc_queue");
        var xmlDoc = new XMLDocument2();
        ecc_queue.initialize();
        ecc_queue.agent = "mid.server." + server;
        ecc_queue.payload = '<parameters><parameter name="name" value="' + this.encode(command) + '"/></parameters>';
        ecc_queue.queue = "output";
        ecc_queue.topic = "Command";
        ecc_queue.source = "hspokeAsync"
        ecc_queue.agent_correlator = correlator;
        var ecc_sysid = ecc_queue.insert();
    },

    encode: function(x) {
        return x.replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&apos;')
    },
    decode: function(x) {
        return x.replace(/&apos;/g, "'")
            .replace(/&quot;/g, '"')
            .replace(/&gt;/g, '>')
            .replace(/&lt;/g, '<')
            .replace(/&amp;/g, '&')
    },
    type: 'ECCCommand'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-22 17:45:48</sys_created_on>
        <sys_id>20f7d85287ac8910baf50fa90cbb3596</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>ECCCommand</sys_name>
        <sys_package display_value="hspoke" source="x_snc_hspoke">0e01e57e874c8190baf50fa90cbb354e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="hspoke">0e01e57e874c8190baf50fa90cbb354e</sys_scope>
        <sys_update_name>sys_script_include_20f7d85287ac8910baf50fa90cbb3596</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-07 10:37:11</sys_updated_on>
    </sys_script_include>
</record_update>
