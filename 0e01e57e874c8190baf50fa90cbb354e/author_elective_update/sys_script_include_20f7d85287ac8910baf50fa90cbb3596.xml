<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_hspoke.ECCCommand</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ECCCommand</name>
        <script><![CDATA[//https://community.servicenow.com/community?id=community_question&sys_id=db8293a1db101fc01dcaf3231f96195b

var ECCCommand = Class.create();
ECCCommand.prototype = {
    run: function(server, command, correlator) {
        var ecc_queue = new GlideRecord("ecc_queue");
        var xmlDoc = new XMLDocument2();
        ecc_queue.initialize();
        ecc_queue.agent = "mid.server." + server;
        ecc_queue.payload = '<parameters><parameter name="name" value="' + this.encode(command) + '"/></parameters>';
        ecc_queue.queue = "output";
        ecc_queue.topic = "Command";
        ecc_queue.source = "hspokeSync";
        ecc_queue.agent_correlator = correlator;
        var ecc_sysid = ecc_queue.insert();

        var response_sysid;
        var ecc_response = new GlideRecord("ecc_queue");
        for (i = 0; i < 30; i++) {
            global.sleep(1000);
            ecc_response.addQuery("response_to", ecc_sysid);
            ecc_response.addQuery("queue", "input");
            ecc_response.query();
            if (ecc_response.next()) {
                response_sysid = ecc_response.sys_id;
                response_payload_xml = ecc_response.payload;
                xmlDoc.parseXML(response_payload_xml);
                var myResponse = xmlDoc.getFirstNode('/results/result/stdout').getTextContent().toString();
                return myResponse;
            }
        }
    },

    runAsync: function(server, command, correlator) {
        var ecc_queue = new GlideRecord("ecc_queue");
        var xmlDoc = new XMLDocument2();
        ecc_queue.initialize();
        ecc_queue.agent = "mid.server." + server;
        ecc_queue.payload = '<parameters><parameter name="name" value="' + this.encode(command) + '"/></parameters>';
        ecc_queue.queue = "output";
        ecc_queue.topic = "Command";
        ecc_queue.source = "hspokeAsync"
        ecc_queue.agent_correlator = correlator;
        var ecc_sysid = ecc_queue.insert();
    },

    encode: function(x) {
        return x.replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&apos;')
    },
    decode: function(x) {
        return x.replace(/&apos;/g, "'")
            .replace(/&quot;/g, '"')
            .replace(/&gt;/g, '>')
            .replace(/&lt;/g, '<')
            .replace(/&amp;/g, '&')
    },
    type: 'ECCCommand'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-22 17:45:48</sys_created_on>
        <sys_id>20f7d85287ac8910baf50fa90cbb3596</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>ECCCommand</sys_name>
        <sys_package display_value="hspoke" source="x_snc_hspoke">0e01e57e874c8190baf50fa90cbb354e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="hspoke">0e01e57e874c8190baf50fa90cbb354e</sys_scope>
        <sys_update_name>sys_script_include_20f7d85287ac8910baf50fa90cbb3596</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-07 10:37:11</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="hspoke">0e01e57e874c8190baf50fa90cbb354e</application>
        <file_path/>
        <instance_id>35010653dbcb011091232f17d49619f0</instance_id>
        <instance_name>hedera</instance_name>
        <name>sys_script_include_20f7d85287ac8910baf50fa90cbb3596</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_snc_hspoke.ECCCommand&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;ECCCommand&lt;/name&gt;&lt;script&gt;&lt;![CDATA[//https://community.servicenow.com/community?id=community_question&amp;sys_id=db8293a1db101fc01dcaf3231f96195b

var ECCCommand = Class.create();
ECCCommand.prototype = {
    run: function(server, command, correlator) {
        var ecc_queue = new GlideRecord("ecc_queue");
        var xmlDoc = new XMLDocument2();
        ecc_queue.initialize();
        ecc_queue.agent = "mid.server." + server;
        ecc_queue.payload = '&lt;parameters&gt;&lt;parameter name="name" value="' + this.encode(command) + '"/&gt;&lt;/parameters&gt;';
        ecc_queue.queue = "output";
        ecc_queue.topic = "Command";
        ecc_queue.source = "hspokeSync";
        ecc_queue.agent_correlator = correlator;
        var ecc_sysid = ecc_queue.insert();

        var response_sysid;
        var ecc_response = new GlideRecord("ecc_queue");
        for (i = 0; i &lt; 30; i++) {
            global.sleep(1000);
            ecc_response.addQuery("response_to", ecc_sysid);
            ecc_response.addQuery("queue", "input");
            ecc_response.query();
            if (ecc_response.next()) {
                response_sysid = ecc_response.sys_id;
                response_payload_xml = ecc_response.payload;
                xmlDoc.parseXML(response_payload_xml);
                var myResponse = xmlDoc.getFirstNode('/results/result/stdout').getTextContent().toString();
                return myResponse;
            }
        }
    },

    runAsync: function(server, command, correlator) {
        var ecc_queue = new GlideRecord("ecc_queue");
        var xmlDoc = new XMLDocument2();
        ecc_queue.initialize();
        ecc_queue.agent = "mid.server." + server;
        ecc_queue.payload = '&lt;parameters&gt;&lt;parameter name="name" value="' + this.encode(command) + '"/&gt;&lt;/parameters&gt;';
        ecc_queue.queue = "output";
        ecc_queue.topic = "Command";
        ecc_queue.source = "hspokeAsync"
        ecc_queue.agent_correlator = correlator;
        var ecc_sysid = ecc_queue.insert();
    },

    encode: function(x) {
        return x.replace(/&amp;/g, '&amp;amp;')
            .replace(/&lt;/g, '&amp;lt;')
            .replace(/&gt;/g, '&amp;gt;')
            .replace(/"/g, '&amp;quot;')
            .replace(/'/g, '&amp;apos;')
    },
    decode: function(x) {
        return x.replace(/&amp;apos;/g, "'")
            .replace(/&amp;quot;/g, '"')
            .replace(/&amp;gt;/g, '&gt;')
            .replace(/&amp;lt;/g, '&lt;')
            .replace(/&amp;amp;/g, '&amp;')
    },
    type: 'ECCCommand'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-12-22 17:45:48&lt;/sys_created_on&gt;&lt;sys_id&gt;20f7d85287ac8910baf50fa90cbb3596&lt;/sys_id&gt;&lt;sys_mod_count&gt;33&lt;/sys_mod_count&gt;&lt;sys_name&gt;ECCCommand&lt;/sys_name&gt;&lt;sys_package display_value="hspoke" source="x_snc_hspoke"&gt;0e01e57e874c8190baf50fa90cbb354e&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="hspoke"&gt;0e01e57e874c8190baf50fa90cbb354e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_20f7d85287ac8910baf50fa90cbb3596&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-03-07 10:37:11&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1529542669</payload_hash>
        <record_name>ECCCommand</record_name>
        <reverted_from/>
        <source>192e4eaf47cb01101cf79454836d4353</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-04-30 06:17:37</sys_created_on>
        <sys_id>1b9f0627470f01101cf79454836d43c3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>180791e1b660000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-04-30 06:17:37</sys_updated_on>
        <type>Script Include</type>
        <update_guid>d79f06278a0f0110d00f95d6ceafcbc3</update_guid>
        <update_guid_history>d79f06278a0f0110d00f95d6ceafcbc3:-1529542669</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-05-31 13:48:16</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>2e04187fe29c4b149079596022425c11</sys_id>
        <sys_metadata>20f7d85287ac8910baf50fa90cbb3596</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ECCCommand</sys_name>
        <sys_package display_value="hspoke" source="x_snc_hspoke">0e01e57e874c8190baf50fa90cbb354e</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="hspoke">0e01e57e874c8190baf50fa90cbb354e</sys_scope>
        <sys_scope_delete display_value="">116cc33b159748d7b0350f18b26ffb59</sys_scope_delete>
        <sys_update_name>sys_script_include_20f7d85287ac8910baf50fa90cbb3596</sys_update_name>
        <sys_update_version display_value="sys_script_include_20f7d85287ac8910baf50fa90cbb3596">1b9f0627470f01101cf79454836d43c3</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-05-31 13:48:16</sys_updated_on>
    </sys_metadata_delete>
</record_update>
